-- Create account_type enumerable and assign it to the server
create type public.account_type as enum ('Client', 'Employee', 'Admin');
alter type public.account_type owner to cs340;
-- Table structure for table `classification`
create table public.classification (
    classification_id int generated by default as identity,
    classification_name character varying not null,
    constraint classification_pk primary key (classification_id)
);
-- Table structure for table `inventory`
create table if not exists public.inventory (
    inv_id integer not null generated by default as identity,
    inv_make character varying not null,
    inv_model character varying not null,
    inv_year character(4) not null,
    inv_description text not null,
    inv_image character varying not null,
    inv_thumbnail character varying not null,
    inv_price numeric(9, 0) not null,
    inv_miles integer not null,
    inv_color character varying not null,
    classification_id integer not null,
    constraint inventory_pkey primary key (inv_id)
);
-- Create relationship between `classification` and `inventory` tables
alter table if exists public.inventory
add constraint fk_classification foreign key (classification_id) references public.classification (classification_id) match simple on update cascade on delete no action;
-- Table structure for table `account`
create table if not exists public.account (
    account_id integer not null generated by default as identity,
    account_firstname character varying not null,
    account_lastname character varying not null,
    account_email character varying not null,
    account_password character varying not null,
    account_type account_type not null default 'Client'::account_type,
    constraint account_pkey primary key (account_id)
);
-- Table structure for table 'comment'
create table if not exists public.comment (
    comment_id integer not null generated by default as identity,
    comment_text text not null,
    comment_createdate timestamptz not null,
    comment_updatedate timestamptz null,
    account_id integer not null,
    inv_id integer not null,
    constraint comment_pkey primary key (comment_id),
    constraint fk_account foreign key (account_id) references public.account (account_id)
    match simple on update cascade on delete cascade,
    constraint fk_inv foreign key (inv_id) references public.inventory (inv_id)
    match simple on update cascade on delete cascade
);
-- Table structure for table 'gallery'
create table if not exists public.gallery (
    gallery_id integer not null generated by default as identity,
    gallery_image character varying not null,
    inv_id integer not null,
    constraint gallery_pkey primary key (gallery_id),
    constraint fk_gallery foreign key (inv_id) references public.inventory (inv_id)
    match simple on update cascade on delete cascade
);
